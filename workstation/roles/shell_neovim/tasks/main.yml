---
- name: remove system neovim packages
  become: true
  ansible.builtin.dnf:
    name:
      - neovim
      - python3-neovim
      - python36-neovim
    state: absent

- name: download neovim appimage
  become: true
  ansible.builtin.get_url:
    url: "{{ neovim_url }}"
    dest:  "{{ appimages_dir }}/nvim.AppImage"
    mode: 0755
    checksum: "{{ neovim_checksum }}"
  environment: "{{ proxy_env }}"
  register: neovim_appimage

- name: link to /usr/local/bin
  become: true
  ansible.builtin.file:
    src: "{{ appimages_dir }}/nvim.AppImage"
    dest: /usr/local/bin/nvim
    state: link
    force: true

- name: create packs directory
  ansible.builtin.file:
    path: "{{ user_home }}/.local/share/nvim/site/pack/paqs/start/paq-nvim"
    state: directory
    mode: '0755'

- name: get paq-nvim
  become: true
  ansible.builtin.get_url:
    url: "{{ paq_nvim_url }}"
    dest: "{{ paq_nvim_tarball }}"
    checksum: "{{ paq_nvim_checksum }}"
  register: paq_nvim_download

- name: install paq-nvim
  ansible.builtin.unarchive:
    src: "{{ paq_nvim_tarball }}"
    dest: "{{ user_home }}/.local/share/nvim/site/pack/paqs/start/paq-nvim"
    extra_opts: "--strip-components=1"
  when:
    paq_nvim_download.changed

- name: remove older unsused files
  ansible.builtin.file:
     path: "{{ user_home }}/.config/nvim/{{ item }}"
     state: absent
  loop:
    - local_bundles.vim
    - local_init.vim
    - autoload
    - plugged

- name: copy nvim config
  ansible.builtin.copy:
    src: init.lua
    dest: "{{ user_home }}/.config/init.lua"

- name: install pynim python package
  ansible.builtin.pip:
    virtualenv: "{{ neovim_py3venv_dir }}"
    virtualenv_command: "python3 -m venv"
    name: pynvim

- name: remove old appimages in /usr/local/bin
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_fileglob:
    - "/usr/local/bin/nvim-*.appimage"