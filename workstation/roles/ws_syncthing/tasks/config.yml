---
- name: get device id
  ansible.builtin.command:
    cmd: syncthing serve --device-id
  check_mode: no
  changed_when: false
  register: cmd_device_id

- block:
  - ansible.builtin.debug:
      msg: "device {{ id }} is missing from the devices list" 
  - set_fact:
      devices: "{{ devices | combine({id: device}) }}"
  vars:
    id: "{{ cmd_device_id.stdout|trim }}"
    device:
      name: "{{ ansible_hostname }}"
      address: dynamic
  when: id not in devices

- name: configure peer devices attribute
  community.general.xml:
    path: "{{ config_file }}"
    xpath: /configuration/device[@id="{{ item.0 }}"]
    attribute: "{{ item.1 }}"
    value: "{{ devices[item.0][item.1] }}"
    pretty_print: true
  loop: "{{ devices | dict2items | map(attribute='key')| product(_device_attributes) | list }}"
  notify: restart syncthing

- name: configure peer devices values
  community.general.xml:
    path: "{{ config_file }}"
    xpath: /configuration/device[@id="{{ item.0 }}"]/{{ item.1 }}
    value: "{{ devices[item.0][item.1] }}"
    pretty_print: true
  loop: "{{ devices | dict2items | map(attribute='key')| product(_device_values) | list }}"
  notify: restart syncthing

- name: remove other devices
  community.general.xml:
    path: "{{ config_file }}"
    xpath: /configuration/device[{{ selector }}]
    state: absent
    pretty_print: true
  vars:
    selector: '{%- for id in devices.keys() -%}@id!="{{ id }}" {% if not loop.last -%} and {% endif -%}{%- endfor -%}'
  notify: restart syncthing

- name: configure folder attribute
  community.general.xml:
    path: "{{ config_file }}"
    xpath: /configuration/folder[@id="{{ item.0 }}"]
    attribute: "{{ item.1 }}"
    value: "{{ folders[item.0][item.1] }}"
    pretty_print: true
  loop: "{{ folders | dict2items | map(attribute='key')| product(_folder_attributes) | list }}"
  notify: restart syncthing

- name: configure folder values
  community.general.xml:
    path: "{{ config_file }}"
    xpath: /configuration/folder[@id="{{ item.0 }}"]/{{ item.1 }}
    value: "{{ folders[item.0][item.1] }}"
    pretty_print: true
  loop: "{{ folders | dict2items | map(attribute='key')| product(_folder_values) | list }}"
  notify: restart syncthing

- name: configure folder devices
  community.general.xml:
    path: "{{ config_file }}"
    xpath: /configuration/folder[@id="{{ item.0.key }}"]/device[@id="{{ item.1 }}"]
    pretty_print: true
  when: item.1 in item.0.value.devices
  loop: "{{ folders | dict2items | product(devices | dict2items | map(attribute='key')) | list }}"
  notify: restart syncthing

- name: remove other folders
  community.general.xml:
    path: "{{ config_file }}"
    xpath: /configuration/folder[{{ selector }}]
    state: absent
    pretty_print: true
  vars:
    selector: '{%- for id in folders.keys() -%}@id!="{{ id }}" {% if not loop.last -%} and {% endif -%}{%- endfor -%}'
  notify: restart syncthing
