---
- name: remove system neovim packages
  become: true
  ansible.builtin.dnf:
    name:
      - neovim
      - python3-neovim
      - python36-neovim
    state: absent

- name: download neovim appimage
  become: true
  ansible.builtin.get_url:
    url: "{{ neovim_appimage_url }}" 
    dest: "{{ neovim_binary }}"
    mode: 0755
    checksum: "{{ neovim_checksum }}"
  environment: "{{ proxy_env }}"
  register: neovim_appimage

- name: copy latest to /usr/bin/local
  become: true
  ansible.builtin.copy:
    src: "{{ neovim_appimage.dest }}"
    dest:  /usr/local/bin/nvim
    remote_src: true
    mode: 0755

- name: create autoload directory
  ansible.builtin.file:
    path: "{{ user_home }}/.local/share/nvim/site/autoload"
    state: directory
    mode: '0755'

- name: update neovim plug
  ansible.builtin.get_url:
    url: "{{ vim_plug_url }}"
    dest: "{{ user_home }}/.local/share/nvim/site/autoload/plug.vim"

- name: remove older unsused files
  ansible.builtin.file:
     path: "{{ user_home}}/.config/nvim/{{ item }}"
     state: absent
  loop:
    - local_bundles.vim
    - local_init.vim
    - autoload
    - plugged

- name: copy nvim config
  ansible.builtin.copy:
    src: config/
    dest: "{{ user_home }}/.config/nvim"

- name: install pynim python package
  ansible.builtin.pip:
    virtualenv: "{{ neovim_py3venv_dir }}"
    virtualenv_command: "python3 -m venv"
    name: pynvim

- name: remove old appimages in /usr/local/bin
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_fileglob:
    - "/usr/local/bin/nvim-*.appimage"